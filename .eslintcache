[{"C:\\dev\\medsurvey\\src\\index.tsx":"1","C:\\dev\\medsurvey\\src\\AppTheme.ts":"2","C:\\dev\\medsurvey\\src\\serviceWorker.ts":"3","C:\\dev\\medsurvey\\src\\app\\store.ts":"4","C:\\dev\\medsurvey\\src\\App.tsx":"5","C:\\dev\\medsurvey\\src\\Routes.ts":"6","C:\\dev\\medsurvey\\src\\features\\home\\index.ts":"7","C:\\dev\\medsurvey\\src\\features\\patientForm\\index.ts":"8","C:\\dev\\medsurvey\\src\\features\\patientsList\\index.ts":"9","C:\\dev\\medsurvey\\src\\features\\patientsList\\PatientsList.tsx":"10","C:\\dev\\medsurvey\\src\\features\\patientForm\\PatientForm.tsx":"11","C:\\dev\\medsurvey\\src\\features\\home\\Home.tsx":"12","C:\\dev\\medsurvey\\src\\rootSaga.ts":"13","C:\\dev\\medsurvey\\src\\features\\patientForm\\patientFormSlice.ts":"14","C:\\dev\\medsurvey\\src\\features\\patientForm\\constants.ts":"15","C:\\dev\\medsurvey\\src\\features\\patientForm\\selectors.ts":"16"},{"size":869,"mtime":1608724700476,"results":"17","hashOfConfig":"18"},{"size":5155,"mtime":1608724446137,"results":"19","hashOfConfig":"18"},{"size":5424,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":594,"mtime":1608933991074,"results":"21","hashOfConfig":"18"},{"size":651,"mtime":1608723706253,"results":"22","hashOfConfig":"18"},{"size":106,"mtime":1608723651655,"results":"23","hashOfConfig":"18"},{"size":52,"mtime":1608721182905,"results":"24","hashOfConfig":"18"},{"size":73,"mtime":1608721207452,"results":"25","hashOfConfig":"18"},{"size":76,"mtime":1608721253381,"results":"26","hashOfConfig":"18"},{"size":530,"mtime":1608721155015,"results":"27","hashOfConfig":"18"},{"size":7874,"mtime":1608958004262,"results":"28","hashOfConfig":"18"},{"size":1714,"mtime":1608725906198,"results":"29","hashOfConfig":"18"},{"size":121,"mtime":1608933808191,"results":"30","hashOfConfig":"18"},{"size":1843,"mtime":1608956203708,"results":"31","hashOfConfig":"18"},{"size":46,"mtime":1608925552090,"results":"32","hashOfConfig":"18"},{"size":307,"mtime":1608938824199,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"jizola",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\dev\\medsurvey\\src\\index.tsx",[],["71","72"],"C:\\dev\\medsurvey\\src\\AppTheme.ts",[],"C:\\dev\\medsurvey\\src\\serviceWorker.ts",[],"C:\\dev\\medsurvey\\src\\app\\store.ts",[],"C:\\dev\\medsurvey\\src\\App.tsx",[],"C:\\dev\\medsurvey\\src\\Routes.ts",[],"C:\\dev\\medsurvey\\src\\features\\home\\index.ts",[],"C:\\dev\\medsurvey\\src\\features\\patientForm\\index.ts",[],"C:\\dev\\medsurvey\\src\\features\\patientsList\\index.ts",[],"C:\\dev\\medsurvey\\src\\features\\patientsList\\PatientsList.tsx",["73","74"],"import { Box, Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport React, { FunctionComponent } from 'react';;\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n\tnavigationButton: {\r\n\t\tpadding: theme.spacing(3)\r\n    }\r\n}));\r\n\r\ninterface PatientsListProps {\r\n}\r\n\r\nexport const PatientsList: FunctionComponent<PatientsListProps> = ({}: PatientsListProps) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n    \t<Box>\r\n            Список пациентов\r\n\t\t</Box>\r\n\t);\r\n};\r\n","C:\\dev\\medsurvey\\src\\features\\patientForm\\PatientForm.tsx",["75"],"import React, { useCallback, FunctionComponent } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Box, Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport {\r\n    patientFormSlice\r\n} from './patientFormSlice';\r\nimport {\r\n    selectName,\r\n    selectSurname,\r\n    selectPatronymic\r\n} from './selectors';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n\twrapper: {\r\n\t\tpadding: theme.spacing(3)\r\n    },\r\n    questionBlock: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    questionText: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    formInput: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\ninterface PatientFormProps {\r\n}\r\n\r\nexport const PatientForm: FunctionComponent<PatientFormProps> = ({}: PatientFormProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const name = useSelector(selectName);\r\n    const surName = useSelector(selectSurname);\r\n    const patronymic = useSelector(selectPatronymic);\r\n\r\n    const setName = useCallback(({ target: { value } }: React.ChangeEvent<{ value: string }>) => {\r\n\t\tdispatch(patientFormSlice.actions.setName(value));\r\n    }, [dispatch]);\r\n\r\n    const setSurname = useCallback(({ target: { value } }: React.ChangeEvent<{ value: string }>) => {\r\n\t\tdispatch(patientFormSlice.actions.setSurName(value));\r\n    }, [dispatch]);\r\n\r\n    const setPatronymic = useCallback(({ target: { value } }: React.ChangeEvent<{ value: string }>) => {\r\n\t\tdispatch(patientFormSlice.actions.setPatronymic(value));\r\n    }, [dispatch]);\r\n\r\n\treturn (\r\n    \t<Box className={classes.wrapper}>\r\n            <Box className={classes.questionBlock}>\r\n                <Box className={classes.questionText}>\r\n                    {'1. Ваши фамилия, имя, отчество'}\r\n                </Box>\r\n                <TextField\r\n                    required\r\n                    id='surname'\r\n                    label='Фамилия'\r\n                    variant='outlined'\r\n                    value={ surName }\r\n                    onChange={ setSurname }\r\n                    className={classes.formInput}\r\n                />\r\n                <TextField\r\n                    required\r\n                    id='name'\r\n                    label='Имя'\r\n                    variant='outlined'\r\n                    value={ name }\r\n                    onChange={ setName }\r\n                    className={classes.formInput}\r\n                />\r\n                <TextField\r\n                    required\r\n                    id='patronymic'\r\n                    label='Отчество'\r\n                    variant='outlined'\r\n                    value={ patronymic }\r\n                    onChange={ setPatronymic }\r\n                    className={classes.formInput}\r\n                />\r\n            </Box>\r\n            <Box className={classes.questionBlock}>\r\n                <Box className={classes.questionText}>\r\n                    {'2. Укажите Ваш возраст'}\r\n                </Box>\r\n                <TextField\r\n                    id='age'\r\n                    label='Возраст'\r\n                    type='number'\r\n                    variant='outlined'\r\n                    inputProps={{\r\n                        min: 0,\r\n                        max: 250,\r\n                        step: 1,\r\n                        maxLength: 3\r\n                    }}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n            </Box>\r\n            <Box className={classes.questionBlock}>\r\n                <Box className={classes.questionText}>\r\n                    {'3. Укажите Ваш диагноз: Бронхиальная астма (J 45)'}\r\n                </Box>\r\n                <FormControl variant='outlined' className={classes.formInput}>\r\n                    <InputLabel htmlFor='bronchial-asthma-form'>форма</InputLabel>\r\n                    <Select\r\n                        label='форма'\r\n                        inputProps={{\r\n                            name: 'form',\r\n                            id: 'bronchial-asthma-form',\r\n                        }}\r\n                    >\r\n                        <option aria-label='None' value='' />\r\n                        <option value={10}>{'Аллергическая (J 54.0)'}</option>\r\n                        <option value={20}>{'Смешанная (J 54.8)'}</option>\r\n                        <option value={30}>{'Неаллергическая (J 54.1)'}</option>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl variant='outlined' className={classes.formInput}>\r\n                    <InputLabel htmlFor='bronchial-asthma-course'>течение</InputLabel>\r\n                    <Select\r\n                        label='течение'\r\n                        inputProps={{\r\n                            name: 'course',\r\n                            id: 'bronchial-asthma-course',\r\n                        }}\r\n                    >\r\n                        <option aria-label='None' value='' />\r\n                        <option value={10}>{'Лёгкое интермиттирующее'}</option>\r\n                        <option value={20}>{'Лёгкое персистирующее'}</option>\r\n                        <option value={30}>{'Средней тяжести'}</option>\r\n                        <option value={40}>{'Тяжелое'}</option>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl variant='outlined' className={classes.formInput}>\r\n                    <InputLabel htmlFor='bronchial-asthma-degree-of-control'>степень контроля (если астма впервые выявленная, то не указывается)</InputLabel>\r\n                    <Select\r\n                        label='степень контроля (если астма впервые выявленная, то не указывается)'\r\n                        inputProps={{\r\n                            name: 'course',\r\n                            id: 'bronchial-asthma-degree-of-control',\r\n                        }}\r\n                    >\r\n                        <option aria-label='None' value='' />\r\n                        <option value={10}>{'Контролируемая'}</option>\r\n                        <option value={20}>{'Частично контролируемая'}</option>\r\n                        <option value={30}>{'Неконтролируемая'}</option>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl variant='outlined' className={classes.formInput}>\r\n                    <InputLabel htmlFor='bronchial-asthma-respiratory-failure'>{'ДН (дыхательная недостаточность)'}</InputLabel>\r\n                    <Select\r\n                        label='ДН (дыхательная недостаточность)'\r\n                        inputProps={{\r\n                            name: 'course',\r\n                            id: 'bronchial-asthma-respiratory-failure',\r\n                        }}\r\n                    >\r\n                        <option aria-label='None' value='' />\r\n                        <option value={10}>{'0'}</option>\r\n                        <option value={20}>{'I'}</option>\r\n                        <option value={30}>{'II'}</option>\r\n                    </Select>\r\n                </FormControl>\r\n            </Box>\r\n        </Box>\r\n\t);\r\n};\r\n","C:\\dev\\medsurvey\\src\\features\\home\\Home.tsx",["76"],"import React, { FunctionComponent } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport { Button, Paper, Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\n\r\nimport { Routes } from '../../Routes';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n\tnavigationButton: {\r\n        padding: theme.spacing(3),\r\n        margin: theme.spacing(2),\r\n        width: '80%',\r\n        maxWidth: '80%'\r\n    },\r\n    paperRoot: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        width: '100%',\r\n        alignItems: 'center'\r\n    }\r\n}));\r\n\r\ninterface HomeProps {\r\n}\r\n\r\nexport const Home: FunctionComponent<HomeProps> = ({}: HomeProps) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n    \t<Paper id={'home-paper'} elevation={3} classes={{ root: classes.paperRoot }}>\r\n            <Button\r\n                className={classes.navigationButton}\r\n                variant='outlined'\r\n                color='primary'\r\n                startIcon={<PersonAddIcon />}\r\n                component={RouterLink}\r\n                to={Routes.PatientForm}>\r\n                { 'Ввести данные пациента' }\r\n            </Button>\r\n            <Button\r\n                className={classes.navigationButton}\r\n                variant='outlined'\r\n                color='primary'\r\n                startIcon={<PeopleIcon />}\r\n                component={RouterLink}\r\n                to={Routes.PatientsList}>\r\n                { 'Список пациентов' }\r\n            </Button>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n","C:\\dev\\medsurvey\\src\\rootSaga.ts",[],"C:\\dev\\medsurvey\\src\\features\\patientForm\\patientFormSlice.ts",[],"C:\\dev\\medsurvey\\src\\features\\patientForm\\constants.ts",[],"C:\\dev\\medsurvey\\src\\features\\patientForm\\selectors.ts",[],["77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":15,"column":68,"nodeType":"85","messageId":"86","endLine":15,"endColumn":89},{"ruleId":"87","severity":1,"message":"88","line":16,"column":8,"nodeType":"89","messageId":"90","endLine":16,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":41,"column":66,"nodeType":"85","messageId":"86","endLine":41,"endColumn":86},{"ruleId":"83","severity":1,"message":"84","line":31,"column":52,"nodeType":"85","messageId":"86","endLine":31,"endColumn":65},{"ruleId":"79","replacedBy":"91"},{"ruleId":"81","replacedBy":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","@typescript-eslint/no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar",["93"],["94"],"no-global-assign","no-unsafe-negation"]